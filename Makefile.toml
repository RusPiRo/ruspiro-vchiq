#***********************************************************************************************************************
# cargo make tasks to build the example for the Raspberry Pi
#***********************************************************************************************************************
[env.development]
CC = "aarch64-none-elf-gcc"
AR = "aarch64-none-elf-ar"
OCOPY = "aarch64-none-elf-objcopy"
CFLAGS = "-march=armv8-a -Wall -O3 -nostdlib -nostartfiles -ffreestanding -mtune=cortex-a53"
RUSTFLAGS = "-C target-cpu=cortex-a53 -C target-feature=+strict-align,+a53,+fp-armv8,+neon -C link-arg=-T./link64.ld"
QEMUMACHINE = "raspi3"
QEMUCMD = "qemu-system-aarch64"

[env.travis]
CC = "aarch64-linux-gnu-gcc"
AR = "aarch64-linux-gnu-ar"
OCOPY = "aarch64-linux-gnu-objcopy"
CFLAGS = "-march=armv8-a -Wall -O3 -nostdlib -nostartfiles -ffreestanding -mtune=cortex-a53"
RUSTFLAGS = "-C target-cpu=cortex-a53 -C target-feature=+strict-align,+a53,+fp-armv8,+neon -C link-arg=-T./link64.ld"
QEMUMACHINE = "raspi3b"
QEMUCMD = "./qemu/bin/qemu-system-aarch64"

[tasks.build]
command = "cargo"
args = ["build", "--release", "--features", "${FEATURES}"]

[tasks.clippy]
env = { FEATURES = "ruspiro_pi3" }
command = "cargo"
args = ["clippy", "--features", "${FEATURES}"]

[tasks.doc]
env = { FEATURES = "ruspiro_pi3" }
command = "cargo"
args = ["doc", "--features", "${FEATURES}", "--open"]

[tasks.kernel]
command = "aarch64-none-elf-objcopy"
args = ["-O", "binary", "./target/aarch64-ruspiro/release/kernel", "./target/kernel8.img"]
dependencies = [
    "build"
]

[tasks.pi3]
env = { FEATURES = "ruspiro_pi3" }
run_task = "kernel"

[tasks.qemu]
command = "qemu-system-aarch64"
args = ["-M", "${QEMUMACHINE}", "-kernel", "./target/kernel8.img", "-nographic", "-serial", "null", "-serial", "mon:stdio",  "-d", "int,mmu", "-D", "qemu.log"]
dependencies = [
    "pi3"
]

[tasks.deploy]
command = "cargo"
args = ["ruspiro-push", "-k", "./target/kernel8.img", "-p", "COM3"]
dependencies = [
    "pi3"
]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.unittest]
env = { FEATURES = "ruspiro_pi3" }
command = "cargo"
args = ["test", "--tests", "--features", "${FEATURES}"]

[tasks.qemu-test-objcopy]
command = "${OCOPY}"
args = ["-O",  "binary",  "${CARGO_MAKE_TASK_ARGS}", "./target/kernel_test.img"]

[tasks.qemu-test]
command = "${QEMUCMD}"
args = [
    "-semihosting", "-nographic", "-M", "${QEMUMACHINE}", "-kernel", "./target/kernel_test.img", "-serial", "null", "-serial", "mon:stdio", "-d", "int,mmu", "-D", "qemu.log"
]
dependencies = [
    "qemu-test-objcopy"
]
